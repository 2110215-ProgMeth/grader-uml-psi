name: Core Tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [11, 17, 21, 24]

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      run: mvn clean test
      working-directory: ./core

    - name: Generate CSV test summary
      if: success() || failure()
      run: |
        mkdir -p core/target/surefire-reports
        CSV=core/target/surefire-reports/results-java-${{ matrix.java-version }}.csv
        echo "TestName,TestsRun,Failures,Errors,Skipped,TimeElapsedSeconds" > "$CSV"
        for f in core/target/surefire-reports/*.txt; do
          # skip the output file if re-run
          if [ "$f" != "${CSV%.csv}.txt" ]; then
            name=$(basename "$f" .txt)
            summary=$(grep 'Tests run' "$f")
            run=$(echo "$summary" | sed -E 's/.*Tests run: ([0-9]+),.*/\1/')
            failures=$(echo "$summary" | sed -E 's/.*Failures: ([0-9]+),.*/\1/')
            errors=$(echo "$summary" | sed -E 's/.*Errors: ([0-9]+),.*/\1/')
            skipped=$(echo "$summary" | sed -E 's/.*Skipped: ([0-9]+),.*/\1/')
            time=$(echo "$summary" | sed -E 's/.*Time elapsed: ([0-9.]+) s.*/\1/')
            echo "$name,$run,$failures,$errors,$skipped,$time" >> "$CSV"
          fi
        done
      shell: bash

    - name: Upload CSV test summary
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results-java-${{ matrix.java-version }}
        path: core/target/surefire-reports/results-java-${{ matrix.java-version }}.csv